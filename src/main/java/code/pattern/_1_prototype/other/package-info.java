/**
 * 额外知识点
 * 1.值传递，引用传递
 * java中只存在值传递
 * 当参数的类型是基本类型时（byte，short，int，long，boolean，float，double，char）时，传入给形参的是实参的值，对形参的值进行修改并不会影响实参的值。
 * 例子：
 * 小明去餐厅吃饭，看见别人点的红烧肉挺好吃，就把服务员叫过来，说我要一份红烧肉，服务员从后厨拿来一份红烧肉，小明吃完了，但是他吃的红烧肉跟旁边那个人吃的是一份吗？当然不是。
 *
 * 当参数的类型是引用类型是，（数组，对象，枚举等），传入给形参的是实参的地址，指向的是同一个实例，修改了形参的值，同样会对实参的值有影响。
 * 小明回到家，他妻子说：冰箱二层有一只鸡，你去做了；小明做好了，叫妻子过来吃饭。这个时候，他妻子现在看见的鸡和她买回来的一样吗？当然不一样，都做熟了；什么意思呢？鸡就是数据，
 * 冰箱二层就是存储数据的地址，把鸡做熟了就是相当于把值改变了，地方还是那个地方，就是鸡变了。
 * 2.浅拷贝，深拷贝
 */
package code.pattern._1_prototype.other;