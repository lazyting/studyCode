/**
 * 原型模式（个人理解：实际上就是使用克隆的方法，“复制”原对象，具有和原对象一样的结构和数据）
 * 对象创建型模式
 * 方案：采取复制原型对象的方法来创建对象的实例。使用原型模式创建的实例，具有与原型一样的数据。
 * 原型模式的特点：
 * 　　1、由原型对象自身创建目标对象。也就是说，对象创建这一动作发自原型对象本身。
 * 　　2、目标对象是原型对象的一个克隆。也就是说，通过原型模式创建的对象，不仅仅与原型对象具有相同的结构，还与原型对象具有相同的值。
 * 　　3、根据对象克隆深度层次的不同，有浅度克隆与深度克隆。
 * 使用场景
 * 　　1、在创建对象的时候，我们不只是希望被创建的对象继承其基类的基本结构，还希望继承原型对象的数据。
 * 　　2、希望对目标对象的修改不影响既有的原型对象（深度克隆的时候可以完全互不影响）。
 * 　　3、隐藏克隆操作的细节，很多时候，对对象本身的克隆需要涉及到类本身的数据细节。
 * 　　4、类初始化需要消化非常多的资源，这个资源包括数据、硬件资源等；
 * 　　5、通过 new 产生一个对象需要非常繁琐的数据准备或访问权限，则可以使用原型模式；
 * 　　6、一个对象需要提供给其他对象访问，而且各个调用者可能都需要修改其值时，可以考虑使用原型模式拷贝多个对象供调用者使用。在实际项目中，
 * 　　　　原型模式很少单独出现，一般是和工厂方法模式一起出现，通过 clone的方法创建一个对象，然后由工厂方法提供给调用者。原型模式先产生出一个包含
 */
package code.pattern._1_prototype;